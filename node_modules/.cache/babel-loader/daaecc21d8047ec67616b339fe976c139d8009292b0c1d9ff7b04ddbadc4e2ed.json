{"ast":null,"code":"var http = require('http'),\n  https = require('https'),\n  web_o = require('./web-outgoing'),\n  common = require('../common'),\n  passes = exports;\nweb_o = Object.keys(web_o).map(function (pass) {\n  return web_o[pass];\n});\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n[\n// <--\n\n/**\n * Sets `content-length` to '0' if request is of DELETE type.\n *\n * @param {ClientRequest} Req Request object\n * @param {IncomingMessage} Res Response object\n * @param {Object} Options Config object passed to the proxy\n *\n * @api private\n */\n\nfunction deleteLength(req, res, options) {\n  if ((req.method === 'DELETE' || req.method === 'OPTIONS') && !req.headers['content-length']) {\n    req.headers['content-length'] = '0';\n  }\n},\n/**\n * Sets timeout in request socket if it was specified in options.\n *\n * @param {ClientRequest} Req Request object\n * @param {IncomingMessage} Res Response object\n * @param {Object} Options Config object passed to the proxy\n *\n * @api private\n */\n\nfunction timeout(req, res, options) {\n  if (options.timeout) {\n    req.socket.setTimeout(options.timeout);\n  }\n},\n/**\n * Sets `x-forwarded-*` headers if specified in config.\n *\n * @param {ClientRequest} Req Request object\n * @param {IncomingMessage} Res Response object\n * @param {Object} Options Config object passed to the proxy\n *\n * @api private\n */\n\nfunction XHeaders(req, res, options) {\n  if (!options.xfwd) return;\n  var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n  var values = {\n    for: req.connection.remoteAddress || req.socket.remoteAddress,\n    port: common.getPort(req),\n    proto: encrypted ? 'https' : 'http'\n  };\n  ['for', 'port', 'proto'].forEach(function (header) {\n    req.headers['x-forwarded-' + header] = (req.headers['x-forwarded-' + header] || '') + (req.headers['x-forwarded-' + header] ? ',' : '') + values[header];\n  });\n},\n/**\n * Does the actual proxying. If `forward` is enabled fires up\n * a ForwardStream, same happens for ProxyStream. The request\n * just dies otherwise.\n *\n * @param {ClientRequest} Req Request object\n * @param {IncomingMessage} Res Response object\n * @param {Object} Options Config object passed to the proxy\n *\n * @api private\n */\n\nfunction stream(req, res, options, _, server, clb) {\n  // And we begin!\n  server.emit('start', req, res, options.target);\n  if (options.forward) {\n    // If forward enable, so just pipe the request\n    var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(common.setupOutgoing(options.ssl || {}, options, req, 'forward'));\n    (options.buffer || req).pipe(forwardReq);\n    if (!options.target) {\n      return res.end();\n    }\n  }\n\n  // Request initalization\n  var proxyReq = (options.target.protocol === 'https:' ? https : http).request(common.setupOutgoing(options.ssl || {}, options, req));\n\n  // Enable developers to modify the proxyReq before headers are sent\n  proxyReq.on('socket', function (socket) {\n    if (server) {\n      server.emit('proxyReq', proxyReq, req, res, options);\n    }\n  });\n\n  // allow outgoing socket to timeout so that we could\n  // show an error page at the initial request\n  if (options.proxyTimeout) {\n    proxyReq.setTimeout(options.proxyTimeout, function () {\n      proxyReq.abort();\n    });\n  }\n\n  // Ensure we abort proxy if request is aborted\n  req.on('aborted', function () {\n    proxyReq.abort();\n  });\n\n  // Handle errors on incoming request as well as it makes sense to\n  req.on('error', proxyError);\n\n  // Error Handler\n  proxyReq.on('error', proxyError);\n  function proxyError(err) {\n    if (clb) {\n      clb(err, req, res, options.target);\n    } else {\n      server.emit('error', err, req, res, options.target);\n    }\n  }\n  (options.buffer || req).pipe(proxyReq);\n  proxyReq.on('response', function (proxyRes) {\n    if (server) {\n      server.emit('proxyRes', proxyRes, req, res);\n    }\n    for (var i = 0; i < web_o.length; i++) {\n      if (web_o[i](req, res, proxyRes, options)) {\n        break;\n      }\n    }\n\n    // Allow us to listen when the proxy has completed\n    proxyRes.on('end', function () {\n      server.emit('end', req, res, proxyRes);\n    });\n    proxyRes.pipe(res);\n  });\n\n  //proxyReq.end();\n}] // <--\n.forEach(function (func) {\n  passes[func.name] = func;\n});","map":{"version":3,"names":["http","require","https","web_o","common","passes","exports","Object","keys","map","pass","deleteLength","req","res","options","method","headers","timeout","socket","setTimeout","XHeaders","xfwd","encrypted","isSpdy","hasEncryptedConnection","values","for","connection","remoteAddress","port","getPort","proto","forEach","header","stream","_","server","clb","emit","target","forward","forwardReq","protocol","request","setupOutgoing","ssl","buffer","pipe","end","proxyReq","on","proxyTimeout","abort","proxyError","err","proxyRes","i","length","func","name"],"sources":["/home/bsquiat/Development/code/Phase2/music-app-project/node_modules/cors-anywhere/node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js"],"sourcesContent":["var http   = require('http'),\n    https  = require('https'),\n    web_o  = require('./web-outgoing'),\n    common = require('../common'),\n    passes = exports;\n\nweb_o = Object.keys(web_o).map(function(pass) {\n  return web_o[pass];\n});\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n[ // <--\n\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function deleteLength(req, res, options) {\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\n       && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function timeout(req, res, options) {\n    if(options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function XHeaders(req, res, options) {\n    if(!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   * @param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  function stream(req, res, options, _, server, clb) {\n\n    // And we begin!\n    server.emit('start', req, res, options.target)\n    if(options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n      (options.buffer || req).pipe(forwardReq);\n      if(!options.target) { return res.end(); }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function(socket) {\n      if(server) { server.emit('proxyReq', proxyReq, req, res, options); }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if(options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function() {\n         proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // Handle errors on incoming request as well as it makes sense to\n    req.on('error', proxyError);\n\n    // Error Handler\n    proxyReq.on('error', proxyError);\n\n    function proxyError (err){\n      if (clb) {\n        clb(err, req, res, options.target);\n      } else {\n        server.emit('error', err, req, res, options.target);\n      }\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function(proxyRes) {\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\n      for(var i=0; i < web_o.length; i++) {\n        if(web_o[i](req, res, proxyRes, options)) { break; }\n      }\n\n      // Allow us to listen when the proxy has completed\n      proxyRes.on('end', function () {\n        server.emit('end', req, res, proxyRes);\n      });\n\n      proxyRes.pipe(res);\n    });\n\n    //proxyReq.end();\n  }\n\n] // <--\n  .forEach(function(func) {\n    passes[func.name] = func;\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}